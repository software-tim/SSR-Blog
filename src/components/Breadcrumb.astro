---
// src/components/Breadcrumb.astro

interface BreadcrumbItem {
  label: string;
  href: string;
}

export interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<nav class="flex py-3 px-5 text-gray-700 rounded-lg bg-gray-50 mb-6" aria-label="Breadcrumb">
  <ol class="inline-flex items-center space-x-1 md:space-x-3">
    <li class="inline-flex items-center">
      <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-indigo-600">
        <svg class="w-3 h-3 mr-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
          <path d="m19.707 9.293-9-9-9 9 1.414 1.414L10 3.828l6.879 6.879 1.414-1.414Z"/>
          <path d="M10 6.172 3.122 13.05 1.707 14.464l1.414 1.414 6.879-6.879 6.879 6.879 1.414-1.414-1.414-1.414L10 6.172Z"/>
        </svg>
        Home
      </a>
    </li>
    
    {items.map((item: BreadcrumbItem, index: number) => {
      const isLast = index === items.length - 1;
      const itemClass = isLast 
        ? "ml-1 text-sm font-medium text-indigo-600" 
        : "ml-1 text-sm font-medium text-gray-700 hover:text-indigo-600";
      
      return (
        <li>
          <div class="flex items-center">
            <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
            </svg>
            <a href={item.href} class={itemClass}>
              {item.label}
            </a>
          </div>
        </li>
      );
    })}
  </ol>
</nav>